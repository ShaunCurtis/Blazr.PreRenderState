@implements IDisposable
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="/" />
    <link rel="stylesheet" href="bootstrap/bootstrap.min.css" />
    <link rel="stylesheet" href="app.css" />
    <link rel="stylesheet" href="Blazr.PreRenderState.styles.css" />
    <link rel="icon" type="image/png" href="favicon.png" />
    <HeadOutlet @rendermode="InteractiveServer" />
</head>

<body>
    <Routes @rendermode="InteractiveServer" />
    <script src="_framework/blazor.web.js"></script>
</body>

</html>

@code {
    [CascadingParameter] HttpContext? HttpContext { get; set; }
    [Inject] public PersistentComponentState ApplicationState { get; set; } = default!;

    private PersistingComponentStateSubscription? _persistingSubscription;
    private readonly PreRenderAppState _appState = new();

    protected override void OnInitialized()
    {
        _appState.RemoteIPAddress = this.HttpContext?.Connection.RemoteIpAddress?.ToString() ?? "Not Set";
        _persistingSubscription = ApplicationState.RegisterOnPersisting(this.PersistData);
    }

    public Task PersistData()
    {
        this.ApplicationState.PersistAsJson<PreRenderAppState>(PreRenderAppState.TokenName, _appState);
        return Task.CompletedTask;
    }

    void IDisposable.Dispose()
    {
        _persistingSubscription?.Dispose();
    }
}